targets="slir crop symexec crashreason cftrace binpatch fuzzsched tweaksched dbg chunk races direct"

defvars() {
	echo SLIR_SOURCES= ${input_base}/{transform_expr,abstractlog,expression,events}.cpp
	echo SLIR_SOURCES+= ${input_base}/{util,memorychunk,refinement,fixgen}.cpp
	echo SLIR_SOURCES+= ${input_base}/{debug,instantiation,dbgbreak}.cpp
	echo SLIR_TARGETS=${targets}
	cat <<EOF
SLIR_OBJECTS=\$(patsubst %.cpp,%.o,\$(SLIR_SOURCES))
SLIR_DEPS=\$(patsubst %.cpp,%.cpp.d,\$(SLIR_SOURCES))
SLIR_TARGET_SOURCES=\$(patsubst %,${input_base}/%.cpp,\$(SLIR_TARGETS))
SLIR_TARGET_OBJECTS=\$(patsubst %.cpp,%.o,\$(SLIR_TARGET_SOURCES))
SLIR_TARGET_DEPS=\$(patsubst %.cpp,%.cpp.d,\$(SLIR_TARGET_SOURCES))
all_sources+=\$(SLIR_SOURCES) \$(SLIR_TARGET_SOURCES)
clean_files+=slir.a
EOF
}

rules() {
    cat <<EOF
\$(SLIR_OBJECTS) \$(SLIR_TARGET_OBJECTS): CPPFLAGS+=-I\$(libvex)/pub
\$(SLIR_DEPS) \$(SLIR_TARGET_DEPS): CPPFLAGS+=-I\$(libvex)/pub
$targets: slir.a libVEX.a
${input_base}/instantiation.o: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/instantiation.cpp.d: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/races.o: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/races.cpp.d: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/direct.o: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/direct.cpp.d: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/dbgbreak.o: OPTIMIZE_FLAGS=-O0

slir.a: \$(SLIR_OBJECTS)
	rm -f \$@ ; ar rcs \$@ \$^
EOF

	for t in $targets
	do
	    cat <<EOF
$t: ${input_base}/${t}.o
	gcc -lrt \$(PROFILE_FLAGS) -lstdc++ \$^ -o \$@
EOF
	done
}