targets="slir"

defvars() {
	echo SLIR_SOURCES= ${input_base}/{interpret,logreader,addressspace,machinestate,interpreter,syscalls,transform_expr,replay}.cpp
	echo SLIR_SOURCES+= ${input_base}/{thread,machinestate,vamap,pmap,memorychunk,util,memtracepool}.cpp

	cat <<EOF
SLIR_OBJECTS=\$(patsubst %.cpp,%.o,\$(SLIR_SOURCES))
all_sources+=\$(SLIR_SOURCES)
clean_files+=slir.a
EOF
}

rules() {
    cat <<EOF
\$(SLIR_OBJECTS): sli/sli.h
\$(SLIR_OBJECTS): CPPFLAGS+=-I\$(libvex)/pub
${input_base}/interpreter.o: CPPFLAGS+=-I\$(libvex)/priv
${input_base}/logreader.o: sli/ppres.h
${input_base}/interpreter.o: sli/ppres.h

slir.a: \$(SLIR_OBJECTS)
	rm -f \$@ ; ar rcs \$@ \$^

slir: slir.a libVEX.a
	gcc \$(PROFILE_FLAGS) -lstdc++ \$^ -o \$@
EOF
}